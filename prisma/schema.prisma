// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"  // Change this from "mysql" to "postgresql"
  url      = env("DATABASE_URL")  // Ensure this points to the correct PostgreSQL connection URL
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(100)
  isDeleted Boolean  @default(false)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  users     User[]

  @@map("roles")
}

model User {
  id        Int       @id @default(autoincrement())
  userName  String    @unique @db.VarChar(100)
  password  String    @db.VarChar(255)
  isDeleted Boolean   @default(false)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  role      Role      @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId    Int

  @@map("users")
}

model Device {
  id                    String            @id @db.VarChar(255)
  name                  String            @db.VarChar(255) @map("device_name")
  location              String?           @db.VarChar(255)
  description           String?           @db.Text
  setTemperature        Float?            @map("set_temperature")
  reverseRelay          Boolean           @default(false) @map("reverse_relay") 
  wifiName              String?           @db.VarChar(255) @map("wifi_name")
  wifiPassword          String?           @db.VarChar(255) @map("wifi_password")
  createdAt             DateTime          @default(now()) @map("created_at")
  updatedAt             DateTime          @updatedAt @map("updated_at")
  lastActivityAt        DateTime?         @map("last_activity_at")

  sensorReadings        SensorReading[]

  @@map("devices")
}

model SensorReading {
  id                  BigInt    @id @default(autoincrement())
  deviceId            String    @map("device_id")
  device              Device    @relation(fields: [deviceId], references: [id], onDelete: Cascade)

  temperature         Float
  voltage             Float?
  current             Float?
  power               Float?
  createdAt           DateTime  @default(now()) @map("created_at")
  updatedAt           DateTime  @updatedAt @map("updated_at")
  
  @@map("sensor_readings")
}